"use strict";(self.webpackChunkcf_functions=self.webpackChunkcf_functions||[]).push([[538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={id:"getting-started"},i="Getting started",s={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"This getting started guide will show you all you need to know in order to create a simple CloudFront Function",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/cf-functions/docs/getting-started",draft:!1,tags:[],version:"current",frontMatter:{id:"getting-started"},sidebar:"docs",previous:{title:"Setup",permalink:"/cf-functions/docs/setup"},next:{title:"Configuration",permalink:"/cf-functions/docs/usage/configuration"}},l={},c=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Step 1: Create config file",id:"step-1-create-config-file",level:2},{value:"Step 2: Create function handler",id:"step-2-create-function-handler",level:2},{value:"Step 3: Create handler tests",id:"step-3-create-handler-tests",level:2},{value:"Step 4: Deploy to AWS",id:"step-4-deploy-to-aws",level:2},{value:"Stage",id:"stage",level:3},{value:"Test",id:"test",level:3},{value:"Publish",id:"publish",level:3},{value:"Associate",id:"associate",level:3},{value:"Next Steps",id:"next-steps",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting started"),(0,r.kt)("p",null,"This getting started guide will show you all you need to know in order to create a simple CloudFront Function\nwhich adds an HTTP header to an incoming request using the cf-functions library."),(0,r.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,r.kt)("p",null,"If you haven't already, complete the steps in ",(0,r.kt)("a",{parentName:"p",href:"/cf-functions/docs/setup"},"setup"),"."),(0,r.kt)("h2",{id:"step-1-create-config-file"},"Step 1: Create config file"),(0,r.kt)("p",null,"In the root directory of the project create a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"cf-functions.ts"),".\nThis file contains function ",(0,r.kt)("a",{parentName:"p",href:"./usage/configuration"},"configuration")," and deployment information."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// cf-functions.ts\n\nimport { Config, DistributionEventType } from "cf-functions";\n\nconst config: Config = {\n  defaultRuntime: "cloudfront-js-1.0",\n  functions: {\n    AddHeader: {\n      handler: "/handler.ts",\n      test: "/test.ts",\n      description:\n        "Adds the x-custom-header HTTP header to request.",\n      associations: [\n        {\n          distributionId: "MYDISTID",\n          eventType: DistributionEventType.VIEWER_REQUEST,\n          behaviourPattern: "default",\n        },\n      ],\n    },\n  },\n};\n\nexport default config;\n')),(0,r.kt)("p",null,"The above config outlines instructions for cf-functions to create a function named ",(0,r.kt)("inlineCode",{parentName:"p"},"AddHeader")," that runs on the ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudfront-js-1.0"),"\nruntime, executing on ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/associate-function.html"},"viewer request"),",\nwhich is associated with a CloudFront Distribution ",(0,r.kt)("inlineCode",{parentName:"p"},"MYDISTIS")," on the ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," behaviour."),(0,r.kt)("h2",{id:"step-2-create-function-handler"},"Step 2: Create function handler"),(0,r.kt)("p",null,"Create a file matching the handler file path for the ",(0,r.kt)("inlineCode",{parentName:"p"},"AddHeader")," function supplied in the config above: ",(0,r.kt)("inlineCode",{parentName:"p"},"handler.ts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// handler.ts\n\nimport { FunctionEvent, HandlerReturn } from "cf-functions";\n\nfunction handler(event: FunctionEvent): HandlerReturn {\n    var headers = event.request.headers;\n\n    headers["x-custom-header"] = { value: "Cool beans!" };\n\n    return event.request;\n}\n')),(0,r.kt)("p",null,"The handler code above simply adds a header named ",(0,r.kt)("inlineCode",{parentName:"p"},"x-custom-header")," to the viewer request with a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"Cool beans!"),".\nFor more information related to writing function code, refer to the AWS ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html"},"programming model"),"\ndocs."),(0,r.kt)("h2",{id:"step-3-create-handler-tests"},"Step 3: Create handler tests"),(0,r.kt)("p",null,"Create a file matching the ",(0,r.kt)("a",{parentName:"p",href:"./usage/testing"},"handler test")," file path for the ",(0,r.kt)("inlineCode",{parentName:"p"},"AddHeader")," function supplied in the config above: ",(0,r.kt)("inlineCode",{parentName:"p"},"test.ts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// test.ts\n\nexport default [\n    {\n        name: `It should add x-custom-header with value \'Cool beans!\'.`,\n        given: {\n            request: {\n                method: "GET",\n                uri: "https://mysite.com",\n            },\n        },\n        expect: {\n            request: {\n                method: "GET",\n                uri: "https://mysite.com",\n                headers: {\n                    "x-custom-header": {\n                        value: "Cool beans!",\n                    },\n                },\n            },\n        },\n    }\n]\n')),(0,r.kt)("p",null,"A test file expects a default export consisting of an array of test objects. Learn more about how function tests work\nin the ",(0,r.kt)("a",{parentName:"p",href:"./usage/testing"},"testing")," section."),(0,r.kt)("h2",{id:"step-4-deploy-to-aws"},"Step 4: Deploy to AWS"),(0,r.kt)("p",null,"Deploying a function involves using the following CLI commands. Based on your desired workflow and CI/CD setup, you may\nnot need them all."),(0,r.kt)("h3",{id:"stage"},"Stage"),(0,r.kt)("p",null,"The stage command deploys the handler code for each configured function to the AWS CloudFront Functions ",(0,r.kt)("inlineCode",{parentName:"p"},"DEVELOPMENT"),"\nenvironment."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cf-functions stage\n")),(0,r.kt)("video",{width:"100%",controls:!0},(0,r.kt)("source",{src:"/cf-functions/video/stage-example.mp4",type:"video/mp4"})),(0,r.kt)("h3",{id:"test"},"Test"),(0,r.kt)("p",null,"The test command runs the test suite associated with each configured function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cf-functions test -s DEVELOPMENT\n")),(0,r.kt)("video",{width:"100%",controls:!0},(0,r.kt)("source",{src:"/cf-functions/video/test-example.mp4",type:"video/mp4"})),(0,r.kt)("h3",{id:"publish"},"Publish"),(0,r.kt)("p",null,"The publish command copies the handler code for each configured function from the ",(0,r.kt)("inlineCode",{parentName:"p"},"DEVELOPMENT")," environment to the ",(0,r.kt)("inlineCode",{parentName:"p"},"LIVE"),"\nenvironment."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cf-functions publish\n")),(0,r.kt)("video",{width:"100%",controls:!0},(0,r.kt)("source",{src:"/cf-functions/video/publish-example.mp4",type:"video/mp4"})),(0,r.kt)("h3",{id:"associate"},"Associate"),(0,r.kt)("p",null,"The associate command creates an association between a function deployed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"LIVE")," environment and an AWS CloudFront\nDistribution behaviour, for each configured function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cf-functions associate\n")),(0,r.kt)("video",{width:"100%",controls:!0},(0,r.kt)("source",{src:"/cf-functions/video/associate-example.mp4",type:"video/mp4"})),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It can take up to 5 minutes for the association to complete for the first time.")),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"That it! Your function is now live."),(0,r.kt)("p",null,"Continue reading through this documentation to learn more about cf-functions."))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkcf_functions=self.webpackChunkcf_functions||[]).push([[501],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const i={id:"setup"},a="Setup",s={unversionedId:"setup",id:"setup",title:"Setup",description:"Pre-requisites",source:"@site/docs/setup.mdx",sourceDirName:".",slug:"/setup",permalink:"/cf-functions/docs/setup",draft:!1,tags:[],version:"current",frontMatter:{id:"setup"},sidebar:"docs",next:{title:"Getting started",permalink:"/cf-functions/docs/getting-started"}},c={},u=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"ESM",id:"esm",level:3},{value:"Typescript",id:"typescript",level:3},{value:"cf-functions.ts",id:"cf-functionsts",level:3}],l={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setup"},"Setup"),(0,o.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,o.kt)("p",null,"The cf-functions CLI tool uses the AWS SDK and therefore requires ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html"},"AWS account credentials"),"\nconfigured on the machine in use."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add --dev cf-functions ts-node typescript\n")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("h3",{id:"esm"},"ESM"),(0,o.kt)("p",null,"This package is ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c"},"pure ESM"),", meaning you must use\nESM when setting up your project too. Ensure the package.json in your project has ",(0,o.kt)("inlineCode",{parentName:"p"},"module")," for type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// package.json\n\n{\n  "type": "module",\n  ...\n}\n')),(0,o.kt)("h3",{id:"typescript"},"Typescript"),(0,o.kt)("p",null,"To allow ESM support, set the module to ",(0,o.kt)("inlineCode",{parentName:"p"},"NodeNext")," as per below. It's also recommended to set the target to ",(0,o.kt)("inlineCode",{parentName:"p"},"es5")," as that\nis the closest Ecmascript version to the CloudFront JS runtime."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// tsconfig.json\n\n{\n    "compilerOptions": {\n        "target": "es5",\n        "module": "NodeNext",\n        ...\n    },\n    ...\n}\n')),(0,o.kt)("h3",{id:"cf-functionsts"},"cf-functions.ts"),(0,o.kt)("p",null,"A ",(0,o.kt)("a",{parentName:"p",href:"./usage/configuration"},"configuration")," file named ",(0,o.kt)("inlineCode",{parentName:"p"},"cf-functions.ts")," containing project configuration is required. The\ndefault location for the config file is the current working directory at runtime."))}p.isMDXComponent=!0}}]);